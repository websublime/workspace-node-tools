[workspace]
members = ["./crates/*"]
resolver = "2"

[workspace.package]
edition = "2021"
homepage = "https://websublime.com/"
license = "MIT"
repository = "https://github.com/websublime/workspace-node-tools"

[profile.release-debug]
debug = true
inherits = "release"

[workspace.lints.rust]

[workspace.lints.clippy]
# Guidelines
# - We should only disable rules globally if they are either false positives, chaotic, or does not make sense.
# - Group are enabled with priority -1, so we could easily override some specific rules.
#   - https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section

# --- restriction https://doc.rust-lang.org/clippy/usage.html#clippyrestriction
dbg_macro = "deny"
print_stdout = "deny"

# I like the explicitness of this rule as it removes confusion around `clone`.
# This increases readability, avoids `clone` mindlessly and heap allocating on accident.
clone_on_ref_ptr = "deny"
empty_drop = "deny"
exit = "deny"
filetype_is_file = "deny"
get_unwrap = "deny"
rc_buffer = "deny"
rc_mutex = "deny"
rest_pat_in_fully_bound_structs = "deny"
unnecessary_safety_comment = "deny"

# --- pedantic #https://doc.rust-lang.org/clippy/usage.html#clippypedantic
# To write the best rust code, pedantic group is enabled by default.
pedantic = { level = "deny", priority = -1 }

# Wizards, naming is too hard.
module_inception = "allow"
module_name_repetitions = "allow"
similar_names = "allow"

# Forwarding `Result` is a common pattern, this rule is too pedantic.
missing_errors_doc = "allow"

# #[must_use] is creating too much noise for this codebase, it does not add much value except nagging
# the programmer to add a #[must_use] after clippy has been run.
# Having #[must_use] everywhere also hinders readability.
must_use_candidate = "allow"

doc_markdown = "allow"
missing_const_for_fn = "allow"
needless_for_each = "allow"
new_without_default = "allow"
# TODO: should review this rule.
missing_panics_doc = "allow"

# Order doesn't really matter https://rust-lang.github.io/rust-clippy/master/index.html#/inconsistent_struct_constructor
inconsistent_struct_constructor = "allow"

# Single match is equally readable as if/else. https://rust-lang.github.io/rust-clippy/master/index.html#/single_match
single_match = "allow"
single_match_else = "allow"

[workspace.dependencies]
workspace_std = { version = "0.1.0", path = "./crates/workspace_std" }

napi = { version = "3.0.0-alpha", features = ["async", "anyhow"] }
napi-build = { version = "2.1.3" }
napi-derive = { version = "3.0.0-alpha", default-features = false, features = [
  "type-def",
] }
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
toml = "^0.5"
thiserror = "1.0.64"

[profile.release]
codegen-units = 1
debug = false     # Set to `true` for debug information
lto = "fat"
opt-level = 3
strip = "symbols" # Set to `false` for debug information
